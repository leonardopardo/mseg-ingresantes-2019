e_group("gender") %>%
e_connect_group("gender") %>%
e_x_axis()
count_by_gender %>%
dplyr::mutate(
Genero = c("Femenino", "Masculino")
) %>%
e_charts(Genero) %>%
e_bar(n, name = "Cantidad") %>%
e_labels(
position = "right",
fontSize = 14,
color = "white",
backgroundColor = "rgba(0,0,0,0.5)",
padding = 8,
borderRadius = 4
) %>%
e_legend(show = F) %>%
e_tooltip() %>%
e_flip_coords() %>%
e_grid(containLabel = T) %>%
e_group("gender") %>%
e_connect_group("gender") %>%
e_x_axis(n)
count_by_gender %>%
dplyr::mutate(
Genero = c("Femenino", "Masculino")
) %>%
e_charts(Genero) %>%
e_bar(n, name = "Cantidad") %>%
e_labels(
position = "right",
fontSize = 14,
color = "white",
backgroundColor = "rgba(0,0,0,0.5)",
padding = 8,
borderRadius = 4
) %>%
e_legend(show = F) %>%
e_tooltip() %>%
e_flip_coords() %>%
e_grid(containLabel = T) %>%
e_group("gender") %>%
e_connect_group("gender") %>%
e_line(serie = n)
count_by_gender %>%
dplyr::mutate(
Genero = c("Femenino", "Masculino")
) %>%
e_charts(Genero) %>%
e_bar(n, name = "Cantidad") %>%
e_labels(
position = "right",
fontSize = 14,
color = "white",
backgroundColor = "rgba(0,0,0,0.5)",
padding = 8,
borderRadius = 4
) %>%
e_legend(show = T) %>%
e_tooltip() %>%
e_flip_coords() %>%
e_grid(containLabel = T) %>%
e_group("gender") %>%
e_connect_group("gender")
count_by_gender %>%
dplyr::mutate(
Genero = c("Femenino", "Masculino")
) %>%
e_charts(Genero) %>%
e_bar(n, name = "Cantidad") %>%
e_labels(
position = "right",
fontSize = 14,
color = "white",
backgroundColor = "rgba(0,0,0,0.5)",
padding = 8,
borderRadius = 4
) %>%
e_legend(show = F) %>%
e_tooltip() %>%
e_flip_coords() %>%
e_grid(containLabel = T) %>%
e_group("gender") %>%
e_connect_group("gender") %>%
e_x_axis(index = 1, show = T)
count_by_gender %>%
dplyr::mutate(
Genero = c("Femenino", "Masculino")
) %>%
e_charts(Genero) %>%
e_bar(n, name = "Cantidad") %>%
e_labels(
position = "right",
fontSize = 14,
color = "white",
backgroundColor = "rgba(0,0,0,0.5)",
padding = 8,
borderRadius = 4
) %>%
e_legend(show = F) %>%
e_tooltip() %>%
e_flip_coords() %>%
e_grid(containLabel = T) %>%
e_group("gender") %>%
e_connect_group("gender")
runApp()
runApp()
location.json = geojsonio::geojson_read(
"gis/departamentos-buenos_aires.json",
what = "sp"
)
lat = -37
lng = -60
zoom = 6.4
m <- map(lat = lat, lng = lng, zoom = zoom)
map <- function(lat, lng, zoom) {
print(lat, lng, zoom)
}
m <- map(lat = lat, lng = lng, zoom = zoom)
map <- function(lat, lng, zoom) {
print(lat)
}
m <- map(lat = lat, lng = lng, zoom = zoom)
map <- function(lat, lng, zoom) {
print(lat)
print(lng)
print(zoom)
}
m <- map(lat = lat, lng = lng, zoom = zoom)
s = list(a = 1)
s[a]
s
s$a
view <- list(lat = 37, lng = -60, zoom = 6.4)
map <- function(view = list(lat, lng, zoom)) {
print(view$lat)
print(view$lng)
print(view$zoom)
}
view <- list(lat = 37, lng = -60, zoom = 6.4)
m <- map(view)
map <- function(view = list(lat = 10, lng = 10, zoom = 5)) {
print(view$lat)
print(view$lng)
print(view$zoom)
}
m <- map()
m <- map(view)
view <- list(lat = -37, lng = -60, zoom = 6.4)
m <- map(view)
map <- function(view = list(lat = -37, lng = -60, zoom = 6.4), locations, domain,
palette = "blues", bins = 6 ) {
p <- colorBin(
palette = palette,
domain = domain,
bins = bins
)
print(p)
}
map <- function(view = list(lat = -37, lng = -60, zoom = 6.4), locations = NULL, domain = NULL,
palette = "blues", bins = 6 ) {
p <- colorBin(
palette = palette,
domain = domain,
bins = bins
)
print(p)
}
m <- map()
map <- function(view = list(lat = -37, lng = -60, zoom = 6.4), locations = NULL, domain = 100,
palette = "blues", bins = 6 ) {
p <- colorBin(
palette = palette,
domain = domain,
bins = bins
)
print(p)
}
m <- map()
map <- function(view = list(lat = -37, lng = -60, zoom = 6.4), locations = NULL, domain = 100,
palette = "Blues", bins = 6 ) {
p <- colorBin(
palette = palette,
domain = domain,
bins = bins
)
print(p)
}
m <- map()
m <- map()
source('C:/Users/leonardo.pardo.MJYS/source/ingresantes2019/views/main/bootstrap.R')
source('views/main/bootstrap.R', local = T)
source('bootstrap/loader.R', local = T)
# load defaults
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
source('app/defaults/defaults.R', local = T)
# load defaults
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
source('app/helpers/connections.R', local = T)
source('C:/Users/leonardo.pardo.MJYS/source/ingresantes2019/views/main/bootstrap.R')
count_entering
partidos <- read.csv2(
'gis/departamentos_partidos.csv',
sep = ';',
stringsAsFactors = T
)
View(partidos)
geolocation_data <- list(name = "Partido", data = partidos)
map <- function(view = list(lat = -37, lng = -60, zoom = 6.4),
location_data = list(name = NULL, locations = NULL), domain = 100,
data = NULL, palette = "Blues", bins = 6, by =  ) {
c <- colorBin(
palette = palette,
domain = domain,
bins = bins
)
m <- leaflet() %>%
addTiles() %>%
setView(
lng = lng,
lat = lat,
zoom = zoom
)
p <- inner_join(domain, locations)
# ListaPartidos <- unique(Partidos3$Partido)
#
# for  (P in ListaPartidos) {
#   d <- Partidos3[Partidos3$Partido == P, , drop = FALSE]
#
#   valor <<- d %>% distinct(Total)
#
#   if (is.na(valor)) {
#     UnColor=="white"
#     fill<-0.5
#     valor<<-0
#   } else {
#     UnColor<-pal(as.numeric(valor))
#     fill<-1
#   }
#
#   l <- l %>%
#     addPolygons(
#       data = d ,
#       lng = ~Lon,
#       lat = ~Lat,
#       popup = paste(P," (", as.character(valor), ")"),
#       fillColor = UnColor,
#       weight = 1,
#       opacity = 0.2,
#       color = "black",
#       dashArray = "3",
#       fillOpacity = fill,
#       layerId = P
#     )
# }
#
# l <- l %>%
#   addLegend(
#     position = "bottomright",
#     pal = pal,
#     values = Inscriptos$Total,
#     title = "Inscripciones",
#     opacity = 1
#   )
#
# l
}
map <- function(view = list(lat = -37, lng = -60, zoom = 6.4),
location_data = list(name = NULL, locations = NULL), domain = 100,
data = NULL, palette = "Blues", bins = 6) {
c <- colorBin(
palette = palette,
domain = domain,
bins = bins
)
m <- leaflet() %>%
addTiles() %>%
setView(
lng = lng,
lat = lat,
zoom = zoom
)
p <- inner_join(domain, locations)
# ListaPartidos <- unique(Partidos3$Partido)
#
# for  (P in ListaPartidos) {
#   d <- Partidos3[Partidos3$Partido == P, , drop = FALSE]
#
#   valor <<- d %>% distinct(Total)
#
#   if (is.na(valor)) {
#     UnColor=="white"
#     fill<-0.5
#     valor<<-0
#   } else {
#     UnColor<-pal(as.numeric(valor))
#     fill<-1
#   }
#
#   l <- l %>%
#     addPolygons(
#       data = d ,
#       lng = ~Lon,
#       lat = ~Lat,
#       popup = paste(P," (", as.character(valor), ")"),
#       fillColor = UnColor,
#       weight = 1,
#       opacity = 0.2,
#       color = "black",
#       dashArray = "3",
#       fillOpacity = fill,
#       layerId = P
#     )
# }
#
# l <- l %>%
#   addLegend(
#     position = "bottomright",
#     pal = pal,
#     values = Inscriptos$Total,
#     title = "Inscripciones",
#     opacity = 1
#   )
#
# l
}
location_data <- list(name = "Partido", locations = partidos)
m <- map(domain = count_entering, location_data = location_data)
map <- function(view = list(lat = -37, lng = -60, zoom = 6.4),
location_data = list(name = NULL, locations = NULL), domain = 100,
data = NULL, palette = "Blues", bins = 6) {
c <- colorBin(
palette = palette,
domain = domain,
bins = bins
)
m <- leaflet() %>%
addTiles() %>%
setView(
lng = view$lng,
lat = view$lat,
zoom = view$zoom
)
p <- inner_join(domain, locations)
# ListaPartidos <- unique(Partidos3$Partido)
#
# for  (P in ListaPartidos) {
#   d <- Partidos3[Partidos3$Partido == P, , drop = FALSE]
#
#   valor <<- d %>% distinct(Total)
#
#   if (is.na(valor)) {
#     UnColor=="white"
#     fill<-0.5
#     valor<<-0
#   } else {
#     UnColor<-pal(as.numeric(valor))
#     fill<-1
#   }
#
#   l <- l %>%
#     addPolygons(
#       data = d ,
#       lng = ~Lon,
#       lat = ~Lat,
#       popup = paste(P," (", as.character(valor), ")"),
#       fillColor = UnColor,
#       weight = 1,
#       opacity = 0.2,
#       color = "black",
#       dashArray = "3",
#       fillOpacity = fill,
#       layerId = P
#     )
# }
#
# l <- l %>%
#   addLegend(
#     position = "bottomright",
#     pal = pal,
#     values = Inscriptos$Total,
#     title = "Inscripciones",
#     opacity = 1
#   )
#
# l
}
m <- map(domain = count_entering, location_data = location_data)
map <- function(view = list(lat = -37, lng = -60, zoom = 6.4),
location_data = list(name = NULL, locations = NULL), domain = 100,
data = NULL, palette = "Blues", bins = 6) {
c <- colorBin(
palette = palette,
domain = domain,
bins = bins
)
m <- leaflet() %>%
addTiles() %>%
setView(
lng = view$lng,
lat = view$lat,
zoom = view$zoom
)
p <- inner_join(domain, location_data$locations)
# ListaPartidos <- unique(Partidos3$Partido)
#
# for  (P in ListaPartidos) {
#   d <- Partidos3[Partidos3$Partido == P, , drop = FALSE]
#
#   valor <<- d %>% distinct(Total)
#
#   if (is.na(valor)) {
#     UnColor=="white"
#     fill<-0.5
#     valor<<-0
#   } else {
#     UnColor<-pal(as.numeric(valor))
#     fill<-1
#   }
#
#   l <- l %>%
#     addPolygons(
#       data = d ,
#       lng = ~Lon,
#       lat = ~Lat,
#       popup = paste(P," (", as.character(valor), ")"),
#       fillColor = UnColor,
#       weight = 1,
#       opacity = 0.2,
#       color = "black",
#       dashArray = "3",
#       fillOpacity = fill,
#       layerId = P
#     )
# }
#
# l <- l %>%
#   addLegend(
#     position = "bottomright",
#     pal = pal,
#     values = Inscriptos$Total,
#     title = "Inscripciones",
#     opacity = 1
#   )
#
# l
}
m <- map(domain = count_entering, location_data = location_data)
View(partidos)
leaflet() %>%
addTiles() %>%
setView(
lng = -60,
lat = -37,
zoom = 6
)
leaflet(partidos) %>%
addTiles() %>%
setView(
lng = -60,
lat = -37,
zoom = 6
) %>%
addPolygons()
partidos <- read.csv2(
'gis/partidos_departamentales.csv',
sep = ';',
stringsAsFactors = T
)
partidos <- read.csv2(
'gis/partidos_departamentales.csv',
sep = ';',
stringsAsFactors = T
)
leaflet(partidos) %>%
addTiles() %>%
setView(
lng = -60,
lat = -37,
zoom = 6
) %>%
addPolygons()
install.packages("geojsonio")
partidos <- geojsonio::geojson_read(
"gis/departamentos-buenos_aires.json",
what = "sp"
)
partidos <- geojsonio::geojson_read(
"gis/partidos.geojson",
what = "sp"
)
geojsonio::geojson_read(
"gis/partidos.geojson",
what = "sp"
)
install.packages("sf")
install.packages("sf")
partidos <- geojsonio::geojson_read(
"gis/partidos.geojson",
what = "sp"
)
partidos <- geojsonio::geojson_read(
"gis/partidos.geojson",
what = "sp"
)
library(sf)
library("sp", lib.loc="~/R/win-library/3.5")
partidos <- geojsonio::geojson_read(
"gis/partidos.geojson",
what = "sp"
)
